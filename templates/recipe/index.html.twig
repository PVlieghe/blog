{% extends 'base.html.twig' %}

{% block title %}Recettes{% endblock %}

{% block body %}
<div class="body">
    <div class="row">
        <div id="leftBar" class="col-3 p-3">  
            <form id="sort-form" class="mb-5 ml-auto bg-secondary p-2 border border-primary border-2 rounded">
                <div class="form-group">
                    <label for="sort">Trier par:</label>
                    <select id="sort" name="sort" class="form w-100">
                        <option value="date">Date d'ajout</option>
                        <option value="likes">Nombre de likes</option>
                        <option value="rating">Note moyenne</option>
                    </select>
                </div>
            </form>
            <div id="filter" class= "scroll bg-secondary relative mb-5 p-2 border border-primary border-2 rounded">
                {{ include('recipe/_search_form.html.twig') }}
            </div>
            <a class="btn btn-primary" href="{{ path('app_recipe_new') }}">Créer une nouvelle recette !</a>  
        </div>
        <div class="col-3"></div>


        <div class="col-8 p-3 align-items-center ">
        <h2>{{title}}</h2>
            <div id="recipe-container" class="border border-primary border-2 rounded bg-light">
                {% for recipe in recipes %}
                    <div id="index" class="row recipe" style="max-height:35vh" data-id="{{ recipe.id }}" data-likes="{{ recipe.likes|length }}" data-rating="{{ averageRatings[recipe.id]|default(0) }}" data-date="{{ recipe.createdAt|date('Y-m-d H:i:s') }}">
                        <div class="col-3 image-container" >
                        {% if recipe.pic %}
                            <img class="img-fluid" src="{{ asset('pictures/' ~ recipe.pic) }}" alt="Image de la recette">
                        {% else %}
                            <img class="img-fluid" src="{{ asset('pictures/none.png') }}" alt="Image de la recette">
                        {% endif %}
                        </div>
                        <div class="col-4">
                            <p><i class="bi bi-card-text"></i> <strong>{{ recipe.name }}</strong></p>
                            <p><i class="bi bi-calendar"></i> {{ recipe.createdAt|date('d-m-Y') }}</p>
                            <p>Nombre d'étapes : {{ recipe.steps|length }}</p>
                            <p><i class="bi bi-person"></i> {{ recipe.user.username }}</p>
                        </div>
                        <div class="col-5">
                            <p><i class="bi bi-hand-thumbs-up"></i> {{ recipe.likes|length }}</p>
                            <p>
                                {% set averageRating = averageRatings[recipe.id] %}
                                {% if averageRating is not null %}
                                    Note moyenne : {{ averageRating }}/5
                                {% else %}
                                    Aucune note disponible
                                {% endif %}
                            </p>
                            <div class="recipe-buttons">
                                <a href="{{ path('app_recipe_show', {'id': recipe.id}) }}" class="btn btn-primary">Afficher</a>
                                {% if app.user.email == recipe.user.email %}
                                    <a href="{{ path('app_recipe_edit', {'id': recipe.id}) }}" class="btn btn-success">Modifier</a>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                {% else %}
                <div class="row">
                    <div class="col">Pas de recette trouvée!</div>
                </div>
                {% endfor %}      
                </div>
            </div>
        </div>
    </div>
    

     <script>
        document.addEventListener('DOMContentLoaded', () => {
            const sortSelect = document.getElementById('sort');
            const recipeContainer = document.getElementById('recipe-container');

            sortSelect.addEventListener('change', () => {
                const sortValue = sortSelect.value;
                const recipes = Array.from(recipeContainer.querySelectorAll('.recipe'));

                recipes.sort((a, b) => {
                    let aValue, bValue;
                    
                    switch (sortValue) {
                        case 'likes':
                            aValue = parseInt(a.dataset.likes);
                            bValue = parseInt(b.dataset.likes);
                            return bValue - aValue;
                        case 'rating':
                            aValue = parseFloat(a.dataset.rating);
                            bValue = parseFloat(b.dataset.rating);
                            return bValue - aValue;
                        case 'date':
                        default:
                            aValue = new Date(a.dataset.date);
                            bValue = new Date(b.dataset.date);
                            return bValue - aValue;
                    }
                });

                // Clear existing recipes
                while (recipeContainer.firstChild) {
                    recipeContainer.removeChild(recipeContainer.firstChild);
                }

                // Append sorted recipes
                recipes.forEach(recipe => recipeContainer.appendChild(recipe));
            });
        });
    </script>


{% endblock %}
